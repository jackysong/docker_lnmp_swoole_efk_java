version: "2"
services:
  nginx:
    build: ./nginx
    container_name: nginx
    volumes:
      - "~/Work:/opt/web"
      - "~/Work/log:/opt/log"
    restart: always
    networks:
      - frontend
    # depends_on:
    #   - php
    ports:
      - 80:80
      - 443:443
  php:
    build: ./php
    container_name: php
    volumes:
      - "~/Work:/opt/web:cached"
      - "~/Work/log:/opt/log"
    restart: always
    # extra_hosts:
    #   - 'api.im.com:192.168.99.100'
    #   - 'zb.xx.com:192.168.99.100'
    networks:
      - frontend
      - backend
    # depends_on:
    #   - mysql
    #   - redis
  #    ports:
  #      - 2001:2001
  redis:
    build: ./redis/file
    container_name: redis
    volumes:
      - "~/Work/data/redis:/data"
      - "~/Work/log/redis:/opt/log/redis"
    restart: always
    networks:
      - backend
    ports:
      - 6379:6379
  mysql:
    build: ./mysql/5.6/file
    container_name: mysql
    ports:
      - "3306:3306"
    volumes:
      - ~/Work/data/mysql:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: 123456
    restart: always
    networks:
      - backend
  # node:
  #   build: ./node
  #   container_name: node
  #   volumes:
  #     - '~/Work:/opt/web'
  #   restart: always
  # golang:
  #   build: ./go
  #   container_name: golang
  #   volumes:
  #     - '~/go:/gowork'
  #   restart: always
  #   ports:
  #     - 8088:8088
  #   networks:
  #     - backend
networks:
  frontend:
  backend:
